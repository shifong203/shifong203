//
// File generated by HDevelop for HALCON/.NET (C#) Version 17.12
//

using HalconDotNet;

public partial class HDevelopExport
{
    // Short Description: ÄâºÏÖ±Ïß
    public void pts_to_best_line(out HObject ho_Line, HTuple hv_Rows, HTuple hv_Cols,
        HTuple hv_ActiveNum, out HTuple hv_Row1, out HTuple hv_Col1, out HTuple hv_Row2,
        out HTuple hv_Col2)
    {
        // Local iconic variables

        HObject ho_Contour = null;

        // Local control variables

        HTuple hv_Length = null, hv_Nr = new HTuple();
        HTuple hv_Nc = new HTuple(), hv_Dist = new HTuple(), hv_Length1 = new HTuple();
        // Initialize local and output iconic variables
        HOperatorSet.GenEmptyObj(out ho_Line);
        HOperatorSet.GenEmptyObj(out ho_Contour);
        hv_Row1 = 0;
        hv_Col1 = 0;
        hv_Row2 = 0;
        hv_Col2 = 0;
        ho_Line.Dispose();
        HOperatorSet.GenEmptyObj(out ho_Line);
        HOperatorSet.TupleLength(hv_Cols, out hv_Length);

        if ((int)((new HTuple(hv_Length.TupleGreaterEqual(hv_ActiveNum))).TupleAnd(new HTuple(hv_ActiveNum.TupleGreater(
            1)))) != 0)
        {
            ho_Contour.Dispose();
            HOperatorSet.GenContourPolygonXld(out ho_Contour, hv_Rows, hv_Cols);
            HOperatorSet.FitLineContourXld(ho_Contour, "huber", hv_ActiveNum, 0, 5, 2,
                out hv_Row1, out hv_Col1, out hv_Row2, out hv_Col2, out hv_Nr, out hv_Nc,
                out hv_Dist);
            HOperatorSet.TupleLength(hv_Dist, out hv_Length1);
            if ((int)(new HTuple(hv_Length1.TupleLess(1))) != 0)
            {
                ho_Contour.Dispose();

                return;
            }
            ho_Line.Dispose();
            HOperatorSet.GenContourPolygonXld(out ho_Line, hv_Row1.TupleConcat(hv_Row2),
                hv_Col1.TupleConcat(hv_Col2));
        }

        ho_Contour.Dispose();

        return;
    }
}